/*! grafana - v4.1.2 - 2017-02-13
 * Copyright (c) 2017 Torkel Ã–degaard; Licensed Apache-2.0 */

System.register(["./graph","./legend","./series_overrides_ctrl","./thresholds_form","./template","lodash","app/core/utils/file_export","app/plugins/sdk","./data_processor","./axes_editor"],function(a,b){"use strict";var c,d,e,f,g,h,i,j=this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)};b&&b.id;return{setters:[function(a){},function(a){},function(a){},function(a){},function(a){c=a},function(a){d=a},function(a){e=a},function(a){f=a},function(a){g=a},function(a){h=a}],execute:function(){i=function(a){function b(b,c,e){var f=a.call(this,b,c)||this;return f.annotationsSrv=e,f.hiddenSeries={},f.seriesList=[],f.dataList=[],f.annotations=[],f.colors=[],f.panelDefaults={datasource:null,renderer:"flot",yaxes:[{label:null,show:!0,logBase:1,min:null,max:null,format:"short"},{label:null,show:!0,logBase:1,min:null,max:null,format:"short"}],xaxis:{show:!0,mode:"time",name:null,values:[]},lines:!0,fill:1,linewidth:1,points:!1,pointradius:5,bars:!1,stack:!1,percentage:!1,legend:{show:!0,values:!1,min:!1,max:!1,current:!1,total:!1,avg:!1},nullPointMode:"null",steppedLine:!1,tooltip:{value_type:"individual",shared:!0,sort:0},timeFrom:null,timeShift:null,targets:[{}],aliasColors:{},seriesOverrides:[],thresholds:[]},d.default.defaults(f.panel,f.panelDefaults),d.default.defaults(f.panel.tooltip,f.panelDefaults.tooltip),d.default.defaults(f.panel.legend,f.panelDefaults.legend),d.default.defaults(f.panel.xaxis,f.panelDefaults.xaxis),f.processor=new g.DataProcessor(f.panel),f.events.on("render",f.onRender.bind(f)),f.events.on("data-received",f.onDataReceived.bind(f)),f.events.on("data-error",f.onDataError.bind(f)),f.events.on("data-snapshot-load",f.onDataSnapshotLoad.bind(f)),f.events.on("init-edit-mode",f.onInitEditMode.bind(f)),f.events.on("init-panel-actions",f.onInitPanelActions.bind(f)),f}return j(b,a),b.$inject=["$scope","$injector","annotationsSrv"],b.prototype.onInitEditMode=function(){this.addEditorTab("Axes",h.axesEditorComponent,2),this.addEditorTab("Legend","public/app/plugins/panel/graph/tab_legend.html",3),this.addEditorTab("Display","public/app/plugins/panel/graph/tab_display.html",4),this.addEditorTab("Alert",f.alertTab,5),this.subTabIndex=0},b.prototype.onInitPanelActions=function(a){a.push({text:"Export CSV (series as rows)",click:"ctrl.exportCsv()"}),a.push({text:"Export CSV (series as columns)",click:"ctrl.exportCsvColumns()"}),a.push({text:"Toggle legend",click:"ctrl.toggleLegend()"})},b.prototype.issueQueries=function(b){return this.annotationsPromise=this.annotationsSrv.getAnnotations({dashboard:this.dashboard,panel:this.panel,range:this.range}),a.prototype.issueQueries.call(this,b)},b.prototype.zoomOut=function(a){this.publishAppEvent("zoom-out",2)},b.prototype.onDataSnapshotLoad=function(a){this.annotationsPromise=this.annotationsSrv.getAnnotations({dashboard:this.dashboard,panel:this.panel,range:this.range}),this.onDataReceived(a)},b.prototype.onDataError=function(a){this.seriesList=[],this.annotations=[],this.render([])},b.prototype.onDataReceived=function(a){var b=this;this.dataList=a,this.seriesList=this.processor.getSeriesList({dataList:a,range:this.range}),this.datapointsCount=this.seriesList.reduce(function(a,b){return a+b.datapoints.length},0),this.datapointsOutside=!1;for(var c=0,d=this.seriesList;c<d.length;c++){var e=d[c];e.isOutsideRange&&(this.datapointsOutside=!0)}this.annotationsPromise.then(function(a){b.loading=!1,b.alertState=a.alertState,b.annotations=a.annotations,b.render(b.seriesList)},function(){b.loading=!1,b.render(b.seriesList)})},b.prototype.onRender=function(){if(this.seriesList)for(var a=0,b=this.seriesList;a<b.length;a++){var c=b[a];c.applySeriesOverrides(this.panel.seriesOverrides),c.unit&&(this.panel.yaxes[c.yaxis-1].format=c.unit)}},b.prototype.changeSeriesColor=function(a,b){a.color=b,this.panel.aliasColors[a.alias]=a.color,this.render()},b.prototype.toggleSeries=function(a,b){b.ctrlKey||b.metaKey||b.shiftKey?this.hiddenSeries[a.alias]?delete this.hiddenSeries[a.alias]:this.hiddenSeries[a.alias]=!0:this.toggleSeriesExclusiveMode(a),this.render()},b.prototype.toggleSeriesExclusiveMode=function(a){var b=this,c=this.hiddenSeries;c[a.alias]&&delete c[a.alias];var e=d.default.every(this.seriesList,function(b){return b.alias===a.alias||c[b.alias]});e?d.default.each(this.seriesList,function(a){delete b.hiddenSeries[a.alias]}):d.default.each(this.seriesList,function(c){c.alias!==a.alias&&(b.hiddenSeries[c.alias]=!0)})},b.prototype.toggleAxis=function(a){var b=d.default.find(this.panel.seriesOverrides,{alias:a.alias});b||(b={alias:a.alias},this.panel.seriesOverrides.push(b)),a.yaxis=b.yaxis=2===a.yaxis?1:2,this.render()},b.prototype.addSeriesOverride=function(a){this.panel.seriesOverrides.push(a||{})},b.prototype.removeSeriesOverride=function(a){this.panel.seriesOverrides=d.default.without(this.panel.seriesOverrides,a),this.render()},b.prototype.toggleLegend=function(){this.panel.legend.show=!this.panel.legend.show,this.refresh()},b.prototype.legendValuesOptionChanged=function(){var a=this.panel.legend;a.values=a.min||a.max||a.avg||a.current||a.total,this.render()},b.prototype.exportCsv=function(){e.exportSeriesListToCsv(this.seriesList)},b.prototype.exportCsvColumns=function(){e.exportSeriesListToCsvColumns(this.seriesList)},b}(f.MetricsPanelCtrl),i.template=c.default,a("GraphCtrl",i),a("PanelCtrl",i)}}});